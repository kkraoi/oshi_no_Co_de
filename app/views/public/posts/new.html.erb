<% content_for :title, "投稿｜コード投稿" %>
<% content_for :head do %>
<% end %>
<% content_for :foot do %>
<% end %>
<% content_for :body_class, "js-posts-new" %>

<%= form_with model:@post, local: true do |f| %>
<div class="u-col2" id="js-col2-root">
  <div class="u-col2-main">
    <div class="u-col2-main-inner">
      <h1 class="u-title u-pt-50">コード投稿</h1>

      <%# タイトル %>
      <div class="u-scroll-target" id="title">
        <section class="u-sec">
          <div class="u-inner-4">
            <h2 class="u-title-1">タイトル（必須）</h2>
            <%= f.text_field :title, class: "u-field", placeholder: "例: JSでタブメニュー" %>
          </div>
        </section>
      </div>

      <%# コード %>
      <div class="u-scroll-target" id="code">
        <section class="u-sec">
          <div class="u-inner-4">
            <h2 class="u-title-1">コード（必須）</h2>
            <div id="js-code-fields-container">
              <%# fields_for: 入れ子のモデルのフォームを生成するためのヘルパー。引数は子モデルをシンボルで取り、ブロック引数は、子モデルに対するフォームビルダーオブジェクトとして扱う。 %>
              <%= f.fields_for :codes do |code_fields| %>
               <%= render 'code_fields', f: code_fields %>
              <% end %>
            </div>
            <div class="u-btn-wrap">
              <button type="button" id="js-add-code-field" class="u-btn" aria-label="フィールドを追加する">ボタン</button>
            </div>
            <template id="js-code-field-template">
              <%# raw() => テンプレで使うコードをエスケープすると、文字列のまま出力されてしまう。なのでそれを防止する。セキュリティ面: このケースはユーザーが入力する使い方をしていないので、問題ない。 %>
              <%# gsub("\n", "") => テンプレ内部の改行を取り除く %>
              <%# jsで扱うHTML文字列を1行にしてバグなどを防ぐ %>
              <%= raw(render('code_fields', f: nil).gsub("\n", "")) %>
            </template>
          </div>
        </section>
      </div>

      <%# 解説 %>
      <div class="u-scroll-target" id="description">
        <section class="u-sec">
          <div class="u-inner-4">
            <h2 class="u-title-1">解説</h2>
            <p class="u-mb-10">詳細なコードの説明をMD記法で記載することができます。</p>
            <%= f.text_area :description, class: "u-field-text_area", placeholder: "例: 
  ## JSの解説
  ### ターゲットとなるクラスを取得する
  解説解説..." %>
          </div>
        </section>
      </div>
    </div>
  </div>

  <aside class="u-col2-side">
    <div id="js-col2-drawer" class="u-btn-1 type-1 opt-size-s u-col2-drawer" aria-label="サイドメニューを開閉する ">
      <span class="icon-right">
        <i class="fa-solid fa-arrow-right"></i>
      </span>
      <span class="icon-left">
        <i class="fa-solid fa-arrow-left"></i>
      </span>
    </div>

    <div class="u-col2-side-content">
      <div class="u-col2-side-inner">
        <div class="u-side">
          <div class="u-side-body">
            <menu class="u-menu">
              <li>
                <a href="#title">タイトル</a>
              </li>
              <li>
                <a href="#code">コード</a>
              </li>
              <li>
                <a href="#description">解説</a>
              </li>
            </menu>
          </div>
          <div class="u-side-foot">
            <div class="u-btn-wrap">
              <%= f.submit "投稿する", class: "u-btn opt-size-full" %>
            </div>
          </div>
        </div>
      </div>
    </div>
  </aside>
</div>
<% end %>